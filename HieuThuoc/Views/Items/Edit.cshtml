@model HieuThuoc.Models.Item

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_LayoutAdmin.cshtml";
}
<head>
    <script src="~/Scripts/tinymce/js/tinymce/tinymce.min.js"></script>

    <script>tinymce.init({ selector: 'textarea' });</script>
    <style>
        .editor-field textarea {
            width: 400px;
            height: 100px;
        }
    </style>



</head>
<h2 style="text-align: center"><FONT color="#FF000">CẬP NHẬT</FONT></h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Thuốc</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.ID)

        <div class="form-group">
            <h5 class="control-label col-md-2">Tên</h5>
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <h5 class="control-label col-md-2">Giá mua</h5>
            <div class="col-md-10">
                @Html.EditorFor(model => model.PurcharsePrice, new { htmlAttributes = new { @class = "form-control", required = "required" } })
                @Html.ValidationMessageFor(model => model.PurcharsePrice, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <h5 class="control-label col-md-2">Giá bán</h5>
            <div class="col-md-10">
                @Html.EditorFor(model => model.SellPrice, new { htmlAttributes = new { @class = "form-control", required = "required" } })
                @Html.ValidationMessageFor(model => model.SellPrice, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group" style="display : none">
            <h5 class="control-label col-md-2">Ngày Nhập</h5>
            <div class="col-md-10">
                @Html.EditorFor(model => model.DateImport, new { htmlAttributes = new { @class = "form-control", required = "required" } })
                @Html.ValidationMessageFor(model => model.DateImport, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            <h5 class="control-label col-md-2">Ngày sản xuất</h5>
            <div class="col-md-10">
                @Html.EditorFor(model => model.DateOfManu, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DateOfManu, "", new { @class = "text-danger" })
            </div>
        </div>



        <div class="form-group">
            <h5 class="control-label col-md-2">Hạn sử dụng</h5>
            <div class="col-md-10">
                @Html.EditorFor(model => model.DateOfExpried, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DateOfExpried, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <h5 class="control-label col-md-2">Số lượng</h5>
            <div class="col-md-10">
                @Html.EditorFor(model => model.Quantity, new { htmlAttributes = new { @class = "form-control", required = "required" } })
                @Html.ValidationMessageFor(model => model.Quantity, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <h5 class="control-label col-md-2">Kho</h5>
            <div class="col-md-10">
                @Html.DropDownList("StoreID", null, htmlAttributes: new { @class = "form-control", required = "required" })
                @Html.ValidationMessageFor(model => model.StoreID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <h5 class="control-label col-md-2">Loại Sản Phẩm</h5>
            <div class="col-md-10">
                @Html.DropDownList("TypeID", null, htmlAttributes: new { @class = "form-control", required = "required" })
                @Html.ValidationMessageFor(model => model.TypeID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <h5 class="control-label col-md-2">Xuất Xứ</h5>
            <div class="col-md-10">
                @Html.DropDownList("BrandID", null, htmlAttributes: new { @class = "form-control", required = "required" })
                @Html.ValidationMessageFor(model => model.BrandID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <h5 class="control-label col-md-2">Ảnh</h5>
            <div class="col-md-10">
                @Html.EditorFor(model => model.Picture, new { htmlAttributes = new { @class = "form-control", @id = "picture", @name = "picture", required = "required" } })
                <input type="button" id="btnUpload" value="..." class="btn btn-success" />
                <input type="file" id="fileUpload" accept="image/*" name="fileUpload" style="display:none" ; />
                @Html.ValidationMessageFor(model => model.Picture, "", new { @class = "text-danger" })
                <img id="pictureUpload" width="100" src="" />
            </div>
        </div>

        <div class="form-group">
            <h5 class="control-label col-md-2">Mô tả</h5>
            <div class="col-md-10">
                @Html.EditorFor(model => model.ShortTitle, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ShortTitle, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <h5 class="control-label col-md-2">Chi Tiết</h5>
            <div class="col-md-10">
                @*@Html.EditorFor(model => model.Describe, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Describe, "", new { @class = "text-danger" })*@
                @Html.TextAreaFor(model => model.Describe, new { htmlAttributes = new { @class = "form-control" } })
            </div>
        </div>
        <div class="form-group">
            <a href="/items" class="btn btn-danger">Quay lại</a>
            <button type="submit" class="btn btn-primary">Cập nhật</button>
        </div>
        @*<div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Lưu" class="btn btn-default" />
            </div>
        </div>*@
    </div>
}

@*<div>
    @Html.ActionLink("Quay lại", "Index")
</div>*@
@section upload
{
    <script>
        $(function () {
            // đăng kí sự kiện click của nút btnUpload
            $('#btnUpload').click(function () {
                $('#fileUpload').trigger('click');
            });
            //Bat sự kiện change data cua fileUpload
            $('#fileUpload').change(function () {
                // kiểm tra trình duyệt có hỗ trợ Form data object hay ko
                if (window.FormData !== undefined) {
                    //lấy dữ liệu trên fileUpload
                    var fileUpload = $('#fileUpload').get(0);
                    var files = fileUpload.files;
                    //tạo đối tượng formdata
                    var formData = new FormData();
                    //dđưa dữ liệu vào form
                    formData.append('file', files[0]);
                    $.ajax({
                        type: 'POST',
                        url: '/Image/ProcessUpload',  // đường dẫn upload
                        contentType: false, // khoong có header
                        processData: false, // không xử lí dữ liệu
                        data: formData,
                        success: function (urlImage) {
                            //hiện hình

                            // $('#pictureUpload').attr('src', urlImage);
                            $('#picture').val(urlImage);
                            document.getElementById("pictureUpload").src = "/img/Item/" + urlImage;
                        },
                        error: function (err) {
                            aler('Error: ' + err.statusText);
                        }
                    });
                }
            });
        });
        $(document).ready(function () {
            $(".datepicker").datepicker({
                dateFormat: "dd/mm/yy", // Định dạng ngày tháng
                // Các tùy chọn khác (nếu cần)
            });
        });
    </script>
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://code.jquery.com/ui/1.13.1/jquery-ui.min.js"></script>
    <link rel="stylesheet" href="https://code.jquery.com/ui/1.13.1/themes/smoothness/jquery-ui.css" />
}